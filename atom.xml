<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>枫之木落</title>
  
  <subtitle>你还有很多未完成的梦，还有什么理由停下脚步......</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lookk.cn/"/>
  <updated>2018-01-20T02:40:17.900Z</updated>
  <id>http://www.lookk.cn/</id>
  
  <author>
    <name>枫之木落</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java 反射机制</title>
    <link href="http://www.lookk.cn/2018/01/20/Java-%E5%8F%8D%E5%B0%84%E6%9C%BA%E5%88%B6/"/>
    <id>http://www.lookk.cn/2018/01/20/Java-反射机制/</id>
    <published>2018-01-20T02:23:22.000Z</published>
    <updated>2018-01-20T02:40:17.900Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Java-反射的简单介绍与运用"><a href="#Java-反射的简单介绍与运用" class="headerlink" title="Java 反射的简单介绍与运用"></a>Java 反射的简单介绍与运用</h4><p>java的反射机制：简单来说就是通过类名来获得类的所有信息。</p><p>优点：可以实现动态创建和编译，体现出灵活性。</p><p>缺点：运行效率没有直接new对象快，但现在有很大的提升，可以忽略不计</p><h5 id="首先获得类的Class文件（-calss文件）"><a href="#首先获得类的Class文件（-calss文件）" class="headerlink" title="首先获得类的Class文件（.calss文件）"></a>首先获得类的Class文件（.calss文件）</h5><p>1、通过类的全名（含包名）,但不推荐使用，编译时，编译器并不知道该类是否存在，需要抛出异常：<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Class</span> clazz=<span class="keyword">Class</span>.forName(<span class="string">"className"</span>);</span><br></pre></td></tr></table></figure></p><p>2、直接通过类名（不含包名），编译时可以直接发现该类是否存在<br><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Class</span> clazz=className.<span class="keyword">class</span><span class="comment">;</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><h5 id="创建对象实例"><a href="#创建对象实例" class="headerlink" title="创建对象实例"></a>创建对象实例</h5><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Object  obj</span> =clazz.newInstance();</span><br></pre></td></tr></table></figure><h5 id="获得属性的方法"><a href="#获得属性的方法" class="headerlink" title="获得属性的方法"></a>获得属性的方法</h5><p>1、获得public属性<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Field <span class="attribute">f1</span>=clazz .getField(<span class="string">"name"</span>);</span><br><span class="line">f1.<span class="builtin-name">set</span>(obj,<span class="string">"liu"</span>);</span><br></pre></td></tr></table></figure></p><p>2、获得非public属性</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Field <span class="attribute">f2</span>=clazz .getDeclaredField(<span class="string">"name"</span>);</span><br><span class="line">f2.setAccessible(<span class="literal">true</span>);</span><br><span class="line">f2.<span class="builtin-name">set</span>(obj,<span class="string">"liu"</span>);</span><br></pre></td></tr></table></figure><p>3、获得所有public属性</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Field[] <span class="attribute">f3</span>=clazz .getField();</span><br></pre></td></tr></table></figure><p>4、获得所有public属性<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Field[] <span class="attribute">f4</span>=clazz .getDeclaredField();</span><br></pre></td></tr></table></figure></p><h5 id="获得方法的方法"><a href="#获得方法的方法" class="headerlink" title="获得方法的方法"></a>获得方法的方法</h5><p>1、获得无形参的方法<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">Method</span> <span class="title">m1</span>=<span class="title">clazz</span>.<span class="title">getMethod</span><span class="params">("getName")</span>;</span></span><br><span class="line">m1.invoke(obj);</span><br></pre></td></tr></table></figure></p><p>2、获得有形参的方法<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">Method</span> <span class="title">m2</span>=<span class="title">clazz</span>.<span class="title">getMethod</span><span class="params">("disPlay",String.<span class="keyword">class</span>)</span>;</span><span class="comment">//String.class为形参的类型</span></span><br><span class="line">m2.invoke(obj);</span><br></pre></td></tr></table></figure></p><p>3、获得所有的方法<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">Method</span>[] <span class="title">m3</span>=<span class="title">clazz</span>.<span class="title">getMethod</span><span class="params">()</span>;</span></span><br></pre></td></tr></table></figure></p><p>实例演示：</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> javabean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class User &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">String</span> name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">String</span> password;</span><br><span class="line"><span class="keyword">public</span> User() &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> getName() &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setName(<span class="keyword">String</span> name) &#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> getPassword() &#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setPassword(<span class="keyword">String</span> password) &#123;</span><br><span class="line"><span class="keyword">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> disPlay(<span class="keyword">String</span> <span class="built_in">sort</span>)&#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"该用户的身份："</span>+<span class="built_in">sort</span>);</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> toString() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"User [name="</span> + name + <span class="string">", password="</span> + password + <span class="string">"]"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> javabean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class Test &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> test() <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">Class&lt;User&gt; clazz=User.class;</span><br><span class="line"><span class="comment">/*Class&lt;User&gt; clazz=Class.forName("javabean.User.java");*/</span> </span><br><span class="line"></span><br><span class="line">User user=clazz.newInstance(); </span><br><span class="line"></span><br><span class="line">Field f1=clazz.getDeclaredField(<span class="string">"name"</span>);</span><br><span class="line">f1.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">f1.<span class="built_in">set</span>(user, <span class="string">"jxy"</span>);</span><br><span class="line">Field f2=clazz.getDeclaredField(<span class="string">"password"</span>);</span><br><span class="line">f2.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">f2.<span class="built_in">set</span>(user, <span class="string">"123"</span>); </span><br><span class="line"></span><br><span class="line">Method m1=clazz.getMethod(<span class="string">"disPlay"</span>, <span class="keyword">String</span>.class);</span><br><span class="line">m1.invoke(user, <span class="string">"管理员"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">Test t=<span class="keyword">new</span> Test();</span><br><span class="line">t.test();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/jiaoxiangyu/Reflect" target="_blank" rel="noopener">https://github.com/jiaoxiangyu/Reflect</a> 我Github上有更详细的ppt和代码测试，还有用反射封装的Daobase类，如果有兴趣可以看看</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Java-反射的简单介绍与运用&quot;&gt;&lt;a href=&quot;#Java-反射的简单介绍与运用&quot; class=&quot;headerlink&quot; title=&quot;Java 反射的简单介绍与运用&quot;&gt;&lt;/a&gt;Java 反射的简单介绍与运用&lt;/h4&gt;&lt;p&gt;java的反射机制：简单来说就是通过类名来获得类的所有信息。&lt;/p&gt;
&lt;p&gt;优点：可以实现动态创建和编译，体现出灵活性。&lt;/p&gt;
&lt;p&gt;缺点：运行效率没有直接new对象快，但现在有很大的提升，可以忽略不计&lt;/p&gt;
&lt;h5 id=&quot;首先获得类的Class文件（-calss文件）&quot;&gt;&lt;a href=&quot;#首先获得类的Class文件（-calss文件）&quot; class=&quot;headerlink&quot; title=&quot;首先获得类的Class文件（.calss文件）&quot;&gt;&lt;/a&gt;首先获得类的Class文件（.calss文件）&lt;/h5&gt;&lt;p&gt;1、通过类的全名（含包名）,但不推荐使用，编译时，编译器并不知道该类是否存在，需要抛出异常：&lt;br&gt;&lt;figure class=&quot;highlight coq&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Class&lt;/span&gt; clazz=&lt;span class=&quot;keyword&quot;&gt;Class&lt;/span&gt;.forName(&lt;span class=&quot;string&quot;&gt;&quot;className&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2、直接通过类名（不含包名），编译时可以直接发现该类是否存在&lt;br&gt;&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Class&lt;/span&gt; clazz=className.&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.lookk.cn/categories/java/"/>
    
    
      <category term="java反射" scheme="http://www.lookk.cn/tags/java%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>Echarts 百度画图插件</title>
    <link href="http://www.lookk.cn/2018/01/20/Echarts-%E7%99%BE%E5%BA%A6%E7%94%BB%E5%9B%BE%E6%8F%92%E4%BB%B6/"/>
    <id>http://www.lookk.cn/2018/01/20/Echarts-百度画图插件/</id>
    <published>2018-01-20T01:59:35.000Z</published>
    <updated>2018-01-20T02:04:30.558Z</updated>
    
    <content type="html"><![CDATA[<p>Echarts 是百度的一个js画图插件，非常好用，可以画扇形图、条形图、折线图、散点图、地图等，简单好用，画的图非常漂亮，官方有各种模板和入门教程</p><p>html代码  添加一个div标签就行了，echarts生成的图片大小是根据你设置div的大小生成的</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="attribute">id</span>=<span class="string">"main"</span> <span class="attribute">style</span>=<span class="string">"width: 600px;height:g00px;"</span>&gt;</span><br></pre></td></tr></table></figure><p>js代码：<br>主要分为三步：<br>1、初始化echarts<br>2、编辑option，一般有option模板，可以直接复制，也可以自定义，option的数据直接传一个同一格式的数组代替即可，这点如有疑问可以问我<br>3、使用刚指定的配置项和数据显示图表。</p><a id="more"></a><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//基于准备好的dom，初始化echarts实例</span></span><br><span class="line"><span class="string">var</span> <span class="string">myChart</span> <span class="string">=</span> <span class="string">echarts.init(document.getElementById('main'));</span></span><br><span class="line"></span><br><span class="line"><span class="string">var</span>  <span class="string">option</span> <span class="string">=</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">backgroundColor:</span> <span class="string">'#EFEFEF'</span><span class="string">,</span></span><br><span class="line"><span class="string">/*</span>  <span class="string">下载图片,通用--start</span> <span class="string">*/</span></span><br><span class="line"> <span class="attr">toolbox:</span> <span class="string">&#123;</span></span><br><span class="line">　　<span class="attr">show:</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line">　　<span class="attr">feature:</span> <span class="string">&#123;</span></span><br><span class="line">　　　　<span class="attr">saveAsImage:</span> <span class="string">&#123;</span></span><br><span class="line">　　　　<span class="attr">show:true,</span></span><br><span class="line">　　　　<span class="string">excludeComponents</span> <span class="string">:['toolbox'],</span></span><br><span class="line">　　　　<span class="attr">pixelRatio:</span> <span class="number">2</span></span><br><span class="line">　　　　<span class="string">&#125;</span></span><br><span class="line">　　<span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;,</span></span><br><span class="line"><span class="string">/*</span>  <span class="string">下载图片--end</span> <span class="string">*/</span> </span><br><span class="line"> <span class="attr">title:</span> <span class="string">&#123;</span></span><br><span class="line">     <span class="attr">text:</span> <span class="string">'sdn水下传感器网络图'</span><span class="string">,</span></span><br><span class="line"> <span class="string">&#125;,</span></span><br><span class="line"> <span class="attr">tooltip:&#123;&#125;,</span></span><br><span class="line"> <span class="attr">animationDurationUpdate:</span> <span class="number">1500</span><span class="string">,</span></span><br><span class="line"> <span class="attr">animationEasingUpdate:</span> <span class="string">'quinticInOut'</span><span class="string">,</span></span><br><span class="line"> <span class="string">series</span> <span class="string">:</span> <span class="string">[</span></span><br><span class="line">     <span class="string">&#123;</span></span><br><span class="line">         <span class="attr">type:</span> <span class="string">'graph'</span><span class="string">,</span></span><br><span class="line">         <span class="attr">layout:</span> <span class="string">'none'</span><span class="string">,</span></span><br><span class="line">         <span class="attr">symbolSize:</span> <span class="number">20</span><span class="string">,//图形的大小（示例中的圆的大小）</span></span><br><span class="line">         <span class="attr">roam:</span> <span class="literal">true</span><span class="string">,//鼠标缩放及平移</span></span><br><span class="line">         <span class="attr">focusNodeAdjacency:true,//是否在鼠标移到节点上的时候突出显示节点以及节点的边和邻接节点</span></span><br><span class="line">         <span class="attr">label:</span> <span class="string">&#123;</span></span><br><span class="line">             <span class="attr">normal:</span> <span class="string">&#123;</span></span><br><span class="line">                 <span class="attr">show:</span> <span class="literal">true</span> <span class="string">,</span>  <span class="string">//控制非高亮时节点名称是否显示</span></span><br><span class="line">                 <span class="attr">position:'top',</span></span><br><span class="line">                 <span class="attr">fontSize:20</span></span><br><span class="line">             <span class="string">&#125;</span></span><br><span class="line">         <span class="string">&#125;,</span></span><br><span class="line"></span><br><span class="line">         <span class="attr">edgeSymbol:</span> <span class="string">['circle',</span> <span class="string">'arrow'</span><span class="string">],</span></span><br><span class="line">         <span class="attr">edgeSymbolSize:</span> <span class="string">[0,</span> <span class="number">0</span><span class="string">],</span>    <span class="string">//箭头的大小</span></span><br><span class="line">         <span class="attr">edgeLabel:</span> <span class="string">&#123;</span></span><br><span class="line">             <span class="attr">normal:&#123;</span></span><br><span class="line">                 <span class="attr">show:false</span></span><br><span class="line">             <span class="string">&#125;,</span></span><br><span class="line">             <span class="attr">emphasis:</span> <span class="string">&#123;</span></span><br><span class="line">                 <span class="attr">textStyle:</span> <span class="string">&#123;</span></span><br><span class="line">                     <span class="attr">fontSize:</span> <span class="number">20</span>  <span class="string">//边节点显示的字体大小</span></span><br><span class="line">                 <span class="string">&#125;</span></span><br><span class="line">             <span class="string">&#125;</span></span><br><span class="line">         <span class="string">&#125;,</span></span><br><span class="line"></span><br><span class="line"><span class="string">//节点信息</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">data:_nodesSwitch,</span> <span class="string">//_nodesSwitch数组，里面是从后端获得数据</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">links:_relationsSwitch,</span></span><br><span class="line">         <span class="attr">lineStyle:</span> <span class="string">&#123;</span></span><br><span class="line">             <span class="attr">normal:</span> <span class="string">&#123;</span></span><br><span class="line">                 <span class="attr">show:true,</span></span><br><span class="line">                 <span class="attr">color:</span></span><br><span class="line">                 <span class="string">&#123;</span>       </span><br><span class="line">                         <span class="attr">type:</span> <span class="string">'linear'</span><span class="string">,</span></span><br><span class="line">                         <span class="attr">x:</span> <span class="number">0</span><span class="string">,</span></span><br><span class="line">                         <span class="attr">y:</span> <span class="number">0</span><span class="string">,</span></span><br><span class="line">                         <span class="attr">x2:</span> <span class="number">0</span><span class="string">,</span></span><br><span class="line">                         <span class="attr">y2:</span> <span class="number">1</span><span class="string">,</span></span><br><span class="line">                         <span class="attr">colorStops:</span> <span class="string">[</span></span><br><span class="line">                         <span class="string">&#123;</span></span><br><span class="line">                             <span class="attr">offset:</span> <span class="number">0</span><span class="string">,</span> <span class="attr">color:</span> <span class="string">'red'</span> <span class="string">//</span> <span class="number">0</span><span class="string">%</span> <span class="string">处的颜色</span></span><br><span class="line">                         <span class="string">&#125;</span></span><br><span class="line">                         <span class="string">,&#123;</span></span><br><span class="line">                             <span class="attr">offset:</span> <span class="number">1</span><span class="string">,</span> <span class="attr">color:</span> <span class="string">'blue'</span> <span class="string">//</span> <span class="number">100</span><span class="string">%</span> <span class="string">处的颜色</span></span><br><span class="line">                         <span class="string">&#125;],</span></span><br><span class="line">                         <span class="attr">globalCoord:</span> <span class="literal">false</span> <span class="string">//</span> <span class="string">缺省为</span> <span class="literal">false</span></span><br><span class="line">                     <span class="string">&#125;,</span></span><br><span class="line">               </span><br><span class="line">              <span class="string">//</span> <span class="attr">curveness:</span> <span class="number">0.2</span></span><br><span class="line">                   </span><br><span class="line">             <span class="string">&#125;,</span></span><br><span class="line">             <span class="attr">emphasis:&#123;</span></span><br><span class="line">                 <span class="attr">color:'red',</span></span><br><span class="line">                 <span class="attr">width:3,</span></span><br><span class="line">                 <span class="attr">type:'dashed',//虚线</span></span><br><span class="line"></span><br><span class="line">             <span class="string">&#125;</span></span><br><span class="line">         <span class="string">&#125;,</span></span><br><span class="line">        </span><br><span class="line">         <span class="attr">tooltip:</span></span><br><span class="line">         <span class="string">&#123;</span></span><br><span class="line">         <span class="attr">position:'bottom',//悬浮时显示的位置</span></span><br><span class="line">         <span class="attr">backgroundColor:'green',</span></span><br><span class="line">         <span class="attr">textStyle:&#123;fontSize:18,</span></span><br><span class="line"></span><br><span class="line">         <span class="string">&#125;,</span></span><br><span class="line"></span><br><span class="line">         <span class="attr">formatter:function(params)&#123;//悬浮提示框显示的内容</span></span><br><span class="line">            <span class="string">if</span> <span class="string">(params.data.islink)</span> <span class="string">&#123;</span></span><br><span class="line">            <span class="string">return</span> <span class="string">'节点'</span><span class="string">+params.data.target+params.data.source+'权值：'+params.data.weight;</span></span><br><span class="line">            <span class="string">&#125;</span></span><br><span class="line">            <span class="string">else</span> <span class="string">if</span> <span class="string">(params.data.isnode)&#123;return</span> <span class="string">params.data.ip;&#125;</span></span><br><span class="line">         <span class="string">&#125;</span></span><br><span class="line">         <span class="string">&#125;,//悬浮时的提示框，不设置时是随鼠标移动</span></span><br><span class="line"></span><br><span class="line">     <span class="string">&#125;</span></span><br><span class="line"> <span class="string">]</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">使用刚指定的配置项和数据显示图表。</span></span><br><span class="line"><span class="string">myChart.setOption(option);</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Echarts 是百度的一个js画图插件，非常好用，可以画扇形图、条形图、折线图、散点图、地图等，简单好用，画的图非常漂亮，官方有各种模板和入门教程&lt;/p&gt;
&lt;p&gt;html代码  添加一个div标签就行了，echarts生成的图片大小是根据你设置div的大小生成的&lt;/p&gt;
&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div &lt;span class=&quot;attribute&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width: 600px;height:g00px;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;js代码：&lt;br&gt;主要分为三步：&lt;br&gt;1、初始化echarts&lt;br&gt;2、编辑option，一般有option模板，可以直接复制，也可以自定义，option的数据直接传一个同一格式的数组代替即可，这点如有疑问可以问我&lt;br&gt;3、使用刚指定的配置项和数据显示图表。&lt;/p&gt;
    
    </summary>
    
      <category term="echarts" scheme="http://www.lookk.cn/categories/echarts/"/>
    
    
      <category term="echarts" scheme="http://www.lookk.cn/tags/echarts/"/>
    
  </entry>
  
  <entry>
    <title>reponse返回数据弹出下载框</title>
    <link href="http://www.lookk.cn/2018/01/20/reponse%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%E5%BC%B9%E5%87%BA%E4%B8%8B%E8%BD%BD%E6%A1%86/"/>
    <id>http://www.lookk.cn/2018/01/20/reponse返回数据弹出下载框/</id>
    <published>2018-01-20T01:32:38.000Z</published>
    <updated>2018-01-20T01:39:16.912Z</updated>
    
    <content type="html"><![CDATA[<p>例如java生成excel文件后，直接输入到页面下载</p><p>控制类代码：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(value = <span class="string">"outputRoutes"</span>, method = RequestMethod.GET)</span><br><span class="line">public void outputRoutes(HttpSession session,HttpServletRequest request,HttpServletResponse response) throws Exception &#123;</span><br><span class="line">List&lt;Routes&gt; routess=(List&lt;Routes&gt;)session.getAttribute(<span class="string">"routess"</span>);</span><br><span class="line"><span class="keyword">if</span>(routess!=null) &#123;</span><br><span class="line">            response.reset();</span><br><span class="line">            response.setHeader(<span class="string">"Content-disposition"</span>, <span class="string">"attachment; filename=routes.xls"</span>);</span><br><span class="line">            response.setContentType(<span class="string">"application/x-download"</span>);  </span><br><span class="line">            OutputStream <span class="built_in">output</span> = response.getOutputStream();    </span><br><span class="line">            ExcelUtil.creat2003Excel(routess,<span class="built_in">output</span>);//如果直接输出数据：<span class="built_in">output</span>.<span class="built_in">write</span>(data.toString());  注意头和内容类型要修改</span><br><span class="line">            <span class="built_in">output</span>.<span class="built_in">flush</span>();</span><br><span class="line">            <span class="built_in">output</span>.<span class="built_in">close</span>();     </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ExcelUtil.java:  把HSSFWorkbook对象输入到OutputStream流流中</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public static void creat2003Excel(List&lt;Routes&gt; list,OutputStream output) throws Exception &#123;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">workbook.write(output);</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;例如java生成excel文件后，直接输入到页面下载&lt;/p&gt;
&lt;p&gt;控制类代码：&lt;/p&gt;
&lt;figure class=&quot;highlight lua&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;
      
    
    </summary>
    
      <category term="servlet" scheme="http://www.lookk.cn/categories/servlet/"/>
    
    
      <category term="servlet" scheme="http://www.lookk.cn/tags/servlet/"/>
    
  </entry>
  
  <entry>
    <title>java 把List集合转换为json</title>
    <link href="http://www.lookk.cn/2018/01/19/java-%E6%8A%8AList%E9%9B%86%E5%90%88%E8%BD%AC%E6%8D%A2%E4%B8%BAjson/"/>
    <id>http://www.lookk.cn/2018/01/19/java-把List集合转换为json/</id>
    <published>2018-01-19T13:36:49.000Z</published>
    <updated>2018-01-19T13:39:13.934Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1、servlet-List转json"><a href="#1、servlet-List转json" class="headerlink" title="1、servlet List转json"></a>1、servlet List转json</h4><p>需要jar包，可以到我github<a href="https://github.com/jiaoxiangyu/searchHint/tree/master/WebContent/WEB-INF/lib" target="_blank" rel="noopener">下载</a><br>commons-beanutils-1.7.0.jar<br>commons-collections-3.2.jar<br>commons-httpclient-3.0.1.jar<br>commons-lang-2.4.jar<br>commons-logging-1.0.4.jar<br>ezmorph-1.0.3.jar<br>json-lib-2.2.3-jdk15.jar    </p><p>代码：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONArray;</span><br><span class="line"></span><br><span class="line">@WebServlet(<span class="string">"/searchMeg"</span>)</span><br><span class="line">public class searchMeg extends HttpServlet &#123;</span><br><span class="line">private static final long serialVersionUID = <span class="number">1</span>L;</span><br><span class="line">         </span><br><span class="line">protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123;</span><br><span class="line">response.setCharacterEncoding(<span class="string">"UTF-8"</span>);</span><br><span class="line">String <span class="keyword">name</span>=request.getParameter(<span class="string">"name"</span>);</span><br><span class="line"><span class="keyword">name</span>=new String(<span class="keyword">name</span>.getBytes(<span class="string">"ISO-8859-1"</span>),<span class="string">"UTF-8"</span>);</span><br><span class="line">System.out.println(<span class="keyword">name</span>);</span><br><span class="line">List&lt;String&gt; list =new ArrayList&lt;String&gt;();</span><br><span class="line">list.add(<span class="keyword">name</span>);</span><br><span class="line">list.add(<span class="keyword">name</span>+<span class="keyword">name</span>);</span><br><span class="line">list.add(<span class="keyword">name</span>+<span class="keyword">name</span>+<span class="keyword">name</span>);</span><br><span class="line">list.add(<span class="keyword">name</span>+<span class="keyword">name</span>+<span class="keyword">name</span>+<span class="keyword">name</span>);</span><br><span class="line"><span class="comment">// 集合转为json</span></span><br><span class="line">response.getWriter().println(JSONArray.fromObject(list).toString());</span><br><span class="line"><span class="comment">/*System.out.println(JSONArray.fromObject(list));*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h4 id="2、springMVC-List转json"><a href="#2、springMVC-List转json" class="headerlink" title="2、springMVC List转json"></a>2、springMVC List转json</h4><p>用@ResponseBody注解方法返回类型List，会把List转为json</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(value = <span class="string">"getOldNodes"</span>, method = RequestMethod.GET)</span><br><span class="line"><span class="keyword">public</span> @ResponseBody <span class="built_in">List</span> getOldNodes(HttpSession session)&#123;</span><br><span class="line"><span class="comment">//转json传给js</span></span><br><span class="line"><span class="built_in">List</span> <span class="built_in">list</span>=<span class="literal">new</span> ArrayList() ;</span><br><span class="line"><span class="built_in">list</span>.add(nodes);</span><br><span class="line"><span class="built_in">list</span>.add(relations);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">list</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1、servlet-List转json&quot;&gt;&lt;a href=&quot;#1、servlet-List转json&quot; class=&quot;headerlink&quot; title=&quot;1、servlet List转json&quot;&gt;&lt;/a&gt;1、servlet List转json&lt;/h4&gt;&lt;p&gt;需要jar包，可以到我github&lt;a href=&quot;https://github.com/jiaoxiangyu/searchHint/tree/master/WebContent/WEB-INF/lib&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;下载&lt;/a&gt;&lt;br&gt;commons-beanutils-1.7.0.jar&lt;br&gt;commons-collections-3.2.jar&lt;br&gt;commons-httpclient-3.0.1.jar&lt;br&gt;commons-lang-2.4.jar&lt;br&gt;commons-logging-1.0.4.jar&lt;br&gt;ezmorph-1.0.3.jar&lt;br&gt;json-lib-2.2.3-jdk15.jar    &lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;figure class=&quot;highlight xl&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletException;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.annotation.WebServlet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServlet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; net.sf.json.JSONArray;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@WebServlet(&lt;span class=&quot;string&quot;&gt;&quot;/searchMeg&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class searchMeg extends HttpServlet &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	private static final long serialVersionUID = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;L;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		response.setCharacterEncoding(&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		String &lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;=request.getParameter(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;=new String(&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;.getBytes(&lt;span class=&quot;string&quot;&gt;&quot;ISO-8859-1&quot;&lt;/span&gt;),&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		System.out.println(&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List&amp;lt;String&amp;gt; list =new ArrayList&amp;lt;String&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		list.add(&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		list.add(&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		list.add(&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		list.add(&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;+&lt;span class=&quot;keyword&quot;&gt;name&lt;/span&gt;);		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;// 集合转为json		&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		response.getWriter().println(JSONArray.fromObject(list).toString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;/*System.out.println(JSONArray.fromObject(list));*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.lookk.cn/categories/java/"/>
    
    
      <category term="json" scheme="http://www.lookk.cn/tags/json/"/>
    
      <category term="springmvc" scheme="http://www.lookk.cn/tags/springmvc/"/>
    
  </entry>
  
  <entry>
    <title>js ajax</title>
    <link href="http://www.lookk.cn/2018/01/19/js-ajax/"/>
    <id>http://www.lookk.cn/2018/01/19/js-ajax/</id>
    <published>2018-01-19T13:10:41.000Z</published>
    <updated>2018-01-19T13:11:47.557Z</updated>
    
    <content type="html"><![CDATA[<p>ajax psot提交，把获得json数据转换为数组<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xmlhttp;  </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line"><span class="comment">// IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码</span></span><br><span class="line">xmlhttp = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// IE6, IE5 浏览器执行代码</span></span><br><span class="line">xmlhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (xmlhttp.readyState == <span class="number">4</span> &amp;&amp; xmlhttp.status == <span class="number">200</span>) &#123; </span><br><span class="line"><span class="keyword">var</span> result =xmlhttp.responseText;<span class="comment">//获得服务器返回的json数据</span></span><br><span class="line"><span class="keyword">if</span>(result!=<span class="literal">null</span> &amp;&amp; result!=<span class="string">""</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> json = <span class="built_in">eval</span>(<span class="string">"("</span> + result + <span class="string">")"</span>);<span class="comment">//把json转换为数组</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">xmlhttp.open(<span class="string">"POST"</span>, <span class="string">"nextRoutes"</span>, <span class="literal">true</span>); <span class="comment">//POST或GET，url，true（异步）或 false（同步）</span></span><br><span class="line">xmlhttp.setRequestHeader(<span class="string">"Content-type"</span>,<span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">xmlhttp.send(<span class="string">"name=name"</span>);<span class="comment">//传参</span></span><br></pre></td></tr></table></figure></p><p>get提交改成GET提交，去掉参数就行了，如果想详细了解请去菜鸟教程学习</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ajax psot提交，把获得json数据转换为数组&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="js" scheme="http://www.lookk.cn/categories/js/"/>
    
    
      <category term="js" scheme="http://www.lookk.cn/tags/js/"/>
    
      <category term="ajax" scheme="http://www.lookk.cn/tags/ajax/"/>
    
  </entry>
  
  <entry>
    <title>js form表单提交</title>
    <link href="http://www.lookk.cn/2018/01/19/js-form%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4/"/>
    <id>http://www.lookk.cn/2018/01/19/js-form表单提交/</id>
    <published>2018-01-19T12:54:30.000Z</published>
    <updated>2018-01-19T12:55:39.004Z</updated>
    
    <content type="html"><![CDATA[<p>js把post表单改成get提交</p><p>html代码</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span> id=<span class="string">"_searchForm"</span> action=<span class="string">"find"</span> method=<span class="string">"get"</span> &gt;</span><br><span class="line">&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"text"</span> id=<span class="string">"search"</span> name=<span class="string">"search"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"submit"</span> value=<span class="string">"搜索"</span> onclick=<span class="string">"search();"</span> &gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure><p>js代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"> <span class="keyword">var</span> con=<span class="built_in">document</span>.getElementById(<span class="string">"search"</span>).value;</span><br><span class="line"> <span class="keyword">var</span> form = <span class="built_in">document</span>.getElementById(<span class="string">"_searchForm"</span>); </span><br><span class="line"> form.action=<span class="string">"find?search="</span>+con;</span><br><span class="line"> form.submit(); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;js把post表单改成get提交&lt;/p&gt;
&lt;p&gt;html代码&lt;/p&gt;
&lt;figure class=&quot;highlight stata&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="js" scheme="http://www.lookk.cn/categories/js/"/>
    
    
      <category term="js" scheme="http://www.lookk.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js 常用方法</title>
    <link href="http://www.lookk.cn/2018/01/19/js-%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://www.lookk.cn/2018/01/19/js-常用方法/</id>
    <published>2018-01-19T12:46:17.000Z</published>
    <updated>2018-01-19T12:48:03.581Z</updated>
    
    <content type="html"><![CDATA[<p>控制台输出</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conosole.<span class="built_in">log</span>();</span><br></pre></td></tr></table></figure><p>根据id获得标签属性<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">num</span>=<span class="built_in">document</span>.getElementById(<span class="string">"num"</span>).value;</span><br></pre></td></tr></table></figure></p><p>根据id插入文本</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">document.getElementById(<span class="string">"msg"</span>).<span class="attribute">innerHTML</span>=<span class="string">"message"</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;控制台输出&lt;/p&gt;
&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre
      
    
    </summary>
    
      <category term="js" scheme="http://www.lookk.cn/categories/js/"/>
    
    
      <category term="js" scheme="http://www.lookk.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js 动态生成和删除表格</title>
    <link href="http://www.lookk.cn/2018/01/19/js-%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90%E5%92%8C%E5%88%A0%E9%99%A4%E8%A1%A8%E6%A0%BC/"/>
    <id>http://www.lookk.cn/2018/01/19/js-动态生成和删除表格/</id>
    <published>2018-01-19T09:59:30.000Z</published>
    <updated>2018-01-19T10:01:35.035Z</updated>
    
    <content type="html"><![CDATA[<p>js DOM 实现动态生成和删除表格</p><p>html页面，建一个table标签，注意必须是table或tbody标签，div标签无效<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">动态生成和删除表格<span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"insertTable()"</span>&gt;</span>添加表<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>  <span class="attr">onclick</span>=<span class="string">"deleteTable()"</span>&gt;</span>删除表<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"my_table"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><p>js代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加表</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertTable</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">deleteTable();<span class="comment">//删除旧表</span></span><br><span class="line"><span class="keyword">var</span> tabNode = <span class="built_in">document</span>.getElementById(<span class="string">"my_table"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line"><span class="keyword">var</span> trNode = tabNode.insertRow();</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line"> <span class="keyword">var</span> tdNode=trNode.insertCell(); </span><br><span class="line"> <span class="keyword">var</span> text=<span class="string">""</span>;</span><br><span class="line"> <span class="keyword">if</span>(j==<span class="number">0</span>)&#123;</span><br><span class="line"> text=<span class="string">"编号"</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">1</span>)&#123;</span><br><span class="line"> text=<span class="string">"姓名"</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">2</span>)&#123;</span><br><span class="line"> text=<span class="string">"年龄"</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">3</span>)&#123;</span><br><span class="line"> text=<span class="string">"性别"</span>;</span><br><span class="line"> &#125;</span><br><span class="line">     tdNode.innerHTML=text; </span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line"> <span class="keyword">var</span> tdNode=trNode.insertCell(); </span><br><span class="line"> <span class="keyword">var</span> text=<span class="string">""</span>;</span><br><span class="line"> <span class="keyword">if</span>(j==<span class="number">0</span>)&#123;</span><br><span class="line"> text=i+<span class="number">1</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">1</span>)&#123;</span><br><span class="line"> text=<span class="string">"jxy"</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">2</span>)&#123;</span><br><span class="line"> text=<span class="string">"18"</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span> <span class="keyword">if</span>(j==<span class="number">3</span>)&#123;</span><br><span class="line"> text=<span class="string">"男"</span>;</span><br><span class="line"> &#125;</span><br><span class="line">     tdNode.innerHTML=text; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除表</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deleteTable</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> tb = <span class="built_in">document</span>.getElementById(<span class="string">"my_table"</span>);</span><br><span class="line">    <span class="keyword">var</span> rowNum=tb.rows.length;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;rowNum;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tb.deleteRow(i);</span><br><span class="line">        rowNum=rowNum<span class="number">-1</span>;</span><br><span class="line">        i=i<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>表里的数据是我随便写的，在运用到程序时，要用ajax和json获得数组数据写入表中</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;js DOM 实现动态生成和删除表格&lt;/p&gt;
&lt;p&gt;html页面，建一个table标签，注意必须是table或tbody标签，div标签无效&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;动态生成和删除表格&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;insertTable()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;添加表&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;  &lt;span class=&quot;attr&quot;&gt;onclick&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;deleteTable()&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;删除表&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;my_table&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="js" scheme="http://www.lookk.cn/categories/js/"/>
    
    
      <category term="js" scheme="http://www.lookk.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>Linux常用命令</title>
    <link href="http://www.lookk.cn/2018/01/19/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.lookk.cn/2018/01/19/Linux常用命令/</id>
    <published>2018-01-19T08:39:08.000Z</published>
    <updated>2018-01-19T08:54:35.932Z</updated>
    
    <content type="html"><![CDATA[<h3 id="配置主机名"><a href="#配置主机名" class="headerlink" title="配置主机名"></a>配置主机名</h3><p>  hostname 显示当前主机名称；<br>  sudo hostname Server 把主机名改为Server；</p><h3 id="命令行编辑的几个辅助操作"><a href="#命令行编辑的几个辅助操作" class="headerlink" title="命令行编辑的几个辅助操作"></a>命令行编辑的几个辅助操作</h3><p>Tab键：自动补齐<br>反斜杠“\”：强制换行<br>快捷键 Ctrl+U：清空至行首<br>快捷键 Ctrl+K：清空至行尾<br>快捷键 Ctrl+L：清屏<br>快捷键 Ctrl+C：取消本次命令编辑<br>快捷键 Ctrl+ins 复制<br>快捷键 Shift+ins 粘贴<br><a id="more"></a></p><h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><p><strong>查看工作目录</strong><br>pwd</p><p><strong>复制 cp</strong><br>    cp -r 来源档(source) 目标档(destination) 复制文件夹<br>    cp -i  source destination 复制文件</p><p><strong>移动 mv</strong><br>    mv source  destination 移动<br>    mv oldName newName 改名</p><p><strong>创建文件</strong><br>touch test1    // 创建 test1 文件</p><p><strong>查看默认权限</strong><br>ls -al test1    // 查看 test1 默认权限<br>-rw-r–r– 1 root root 0 Nov 15 10:32 test1</p><p><strong>修改 test1 权限</strong><br>chmod u=rwx,g=rx,o=r  test1    // 修改 test1 权限</p><p><strong>创建新目录</strong><br>    mkdir 目录名称<br>    mkdir -p test1/test2/test3/test4 创建多层目录</p><p><strong>删除空的目录</strong><br>    rmdir 目录名称<br>    rmdir -p test1/test2/test3/test4 将 test1/test2/test3/test4 一次删除</p><p><strong>删除文件或目录</strong><br>    rm -rf 文件或目录名称<br>    rm  -rf  *  删除文件夹下的所有文件</p><p><strong>统计目录及文件的空间占用情况 du</strong><br>-a：统计时包括所有的文件，而不仅仅只统计目录<br>-h：以更易读的字节单位（K、M等）显示信息<br>-s：只统计每个参数所占用空间总的大小</p><p>du -sh jxy<br>5.2M    jxy</p><p><strong>查看文件类型</strong><br>file 文件名<br>file jxy<br>jxy: directory</p><p><strong>查找Linux命令文件并显示所在的位置 —— 搜索范围由 PATH 环境变量指定</strong><br>which  命令或程序名<br> which  mkdir<br>/bin/mkdir</p><h3 id="yum常用命令"><a href="#yum常用命令" class="headerlink" title="yum常用命令"></a>yum常用命令</h3><p>选项包括-h（帮助），-y（当安装过程提示选择全部为”yes”），-q（不显示安装的过程）等等。<br>•    1.列出所有可更新的软件清单命令：yum check-update<br>•    2.更新所有软件命令：yum update<br>•    3.仅安装指定的软件命令：yum install <package_name><br>•    4.仅更新指定的软件命令：yum update <package_name><br>•    5.列出所有可安裝的软件清单命令：yum list<br>•    6.删除软件包命令：yum remove <package_name><br>•    7.查找软件包 命令：yum search <keyword><br>•    8.清除缓存命令:<br>yum clean packages: 清除缓存目录下的软件包<br>yum clean headers: 清除缓存目录下的 headers<br>yum clean oldheaders: 清除缓存目录下旧的 headers<br>yum clean, yum clean all (= yum clean packages; yum clean oldheaders) :清除缓存目录下的软件包及旧的headers</keyword></package_name></package_name></package_name></p><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><p><strong>find命令</strong><br>用途：用于查找文件或目录<br>格式：find  [查找范围]  [查找条件]</p><p>-name：按文件名称查找<br>-size：按文件大小查找<br>-user：按文件属主查找<br>-type：按文件类型查找</p><p>find / -name file1         从 ‘/‘ 开始进入根文件系统查找文件和目录<br>find / -user user1         查找属于用户 ‘user1’ 的文件和目录<br>find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中查找以 ‘.bin’ 结尾的文件</p><h3 id="压缩解压"><a href="#压缩解压" class="headerlink" title="压缩解压"></a>压缩解压</h3><p>bzip2 file1                           压缩file1<br>bunzip2 file1.bz2                      解压file1.bz2<br>gzip file1                            压缩file1<br>gunzip file1.gz                       解压file1.gz<br>tar -cvf archive.tar file1            把file1打包成 archive.tar<br>（-c: 建立压缩档案；-v: 显示所有过程；-f:     使用档案名字，是必须的，是最后一个参数）<br>tar -cvf archive.tar file1 dir1       把 file1，dir1 打包成 archive.tar<br>tar -tf archive.tar                   显示一个包中的内容<br>tar -xvf archive.tar                  释放一个包<br>tar -xvf archive.tar -C /tmp             把压缩包释放到 /tmp目录下<br>zip file1.zip file1                   创建一个zip格式的压缩包<br>unzip file1.zip                       解压一个zip格式的压缩包到当前目录<br>unzip test.zip -d /tmp/               解压一个zip格式的压缩包到 /tmp 目录</p><h3 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h3><p>vi filename     打开filename文件<br>i                 进入编辑模式<br>ESE             退出编辑模式，然后按冒号，出现‘：’，继续输入以下命令<br>:w               保存文件<br>:w cszhi.com    保存至cszhi.com文件<br>:q               退出编辑器，如果文件已修改请使用下面的命令<br>:q!                退出编辑器，且不保存<br>:wq              退出编辑器，且保存文件</p><h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><p><strong>添加用户</strong><br>useradd  [选项]…  用户名</p><p>-c comment 指定一段注释性描述。<br>-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。<br>-g 用户组 指定用户所属的用户组。<br>-G 用户组，用户组 指定用户所属的附加组。<br>-s Shell文件 指定用户的登录Shell。<br>-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。</p><p>useradd –d /usr/sam -m sam</p><p><strong>删除帐号</strong><br>userdel 选项 用户名<br>userdel -r sam</p><p><strong>修改帐号</strong><br>usermod 选项 用户名<br>此命令将用户sam的登录Shell修改为ksh，主目录改为/home/z，用户组改为developer。<br>usermod -s /bin/ksh -d /home/z –g developer sam</p><p><strong>修改密码</strong><br>  passwd 用户名</p><h3 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><p><strong>列出文件系统的整体磁盘使用量</strong><br>df [-ahikHTm] [目录或文件名]</p><p>-a ：列出所有的文件系统，包括系统特有的 /proc 等文件系统；<br>-k ：以 KBytes 的容量显示各文件系统；<br>-m ：以 MBytes 的容量显示各文件系统；<br>-h ：以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示；<br>-H ：以 M=1000K 取代 M=1024K 的进位方式；<br>-T ：显示文件系统类型, 连同该 partition 的 filesystem 名称 (例如 ext3) 也列出；<br>-i ：不用硬盘容量，而以 inode 的数量来显示</p><p>df<br>Filesystem           1K-blocks      Used Available Use% Mounted on<br>/dev/sda2             16242616   2248436  13169092  15% /<br>tmpfs                  1035848       420   1035428   1% /dev/shm<br>/dev/sda1               297485     28815    253310  11% /boot</p><p><strong>检查磁盘空间使用量</strong><br>du [-ahskm] 文件或目录名称</p><p>-a ：列出所有的文件与目录容量，因为默认仅统计目录底下的文件量而已。<br>-h ：以人们较易读的容量格式 (G/M) 显示；<br>-s ：列出总量而已，而不列出每个各别的目录占用容量；<br>-S ：不包括子目录下的总计，与 -s 有点差别。<br>-k ：以 KBytes 列出容量显示；<br>-m ：以 MBytes 列出容量显示；</p><p>du -a<br>12      ./install.log.syslog   &lt;==有文件的列表了<br>8       ./.bash_logout<br>8       ./test4<br>8       ./test2</p><p><strong>虚拟机添加硬盘</strong><br>    虚拟机-&gt;设置-&gt;添加-&gt;硬盘-&gt;选择大小，其他默认就行<br>    添加完后fdisk –l 看看是否挂载，否则重启电脑（暂时就会这个）</p><p><strong>磁盘分区</strong><br>fdisk –l<br>会看到一个新的磁盘没有分区</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Disk /dev/sdb: <span class="number">21.5</span> GB, <span class="number">21474836480</span> bytes</span><br><span class="line"></span><br><span class="line"> #fdisk /dev/sdb</span><br><span class="line">Command (m <span class="keyword">for</span> <span class="keyword">help</span>): n   <span class="comment">//分区</span></span><br><span class="line">Command action</span><br><span class="line">   e   extended  <span class="comment">//逻辑分区</span></span><br><span class="line">   p   primary <span class="keyword">partition</span> (<span class="number">1</span><span class="number">-4</span>) <span class="comment">//主分区</span></span><br><span class="line">p  <span class="comment">//选择主分区</span></span><br><span class="line">Partition number (<span class="number">1</span><span class="number">-4</span>): <span class="number">1</span> <span class="comment">//第几个分区</span></span><br><span class="line">First <span class="keyword">cylinder</span> (<span class="number">1</span><span class="number">-2610</span>, <span class="keyword">default</span> <span class="number">1</span>): <span class="number">1</span>  </span><br><span class="line">Last <span class="keyword">cylinder</span>, +cylinders or +<span class="keyword">size</span>&#123;K,M,G&#125; (<span class="number">1</span><span class="number">-2610</span>, <span class="keyword">default</span> <span class="number">2610</span>): <span class="number">1024</span></span><br><span class="line">Command (m <span class="keyword">for</span> <span class="keyword">help</span>): w   <span class="comment">//保存退出</span></span><br></pre></td></tr></table></figure><h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><p><strong>查看系统服务的启动状态</strong><br>chkconfig –list<br>chkconfig –list 服务名称<br> chkconfig –list network</p><p><strong>设置系统服务的启动状态</strong><br>chkconfig  –level  级别列表 服务名  on|off<br>chkconfig –level 2345 network on  </p><p><strong>终止进程</strong><br>kill用于终止指定PID号的进程<br>killall用于终止指定名称的所有进程<br>-9 选项用于强制终止</p><p>[root@localhost ~]# pgrep -l “portmap”<br>2869  portmap<br>[root@localhost ~]# kill  -9  2869<br>[root@localhost ~]# killall -9 vim<br>[1]-  已杀死               /usr/bin/vim file1<br>[2]-  已杀死               /usr/bin/vim file2</p><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><p>a．开启web服务<br>/etc/init.d/httpd start<br>b．清除防火墙<br>/etc/init.d/iptables stop<br>c．获得ip<br>ifconfig</p><p>配置服务器访问ip<br>cd /etc/httpd/conf<br>vi  httpd.conf</p><directory "="" var="" www="" html"=""><br>    Options Indexes FollowSymLinks<br><br>    AllowOverride None<br><br>Allow from 192.168.1.90/192.168.1.199<br>deny from 192.168.1.200/192.168.1.210<br><br></directory><p>Shell</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;配置主机名&quot;&gt;&lt;a href=&quot;#配置主机名&quot; class=&quot;headerlink&quot; title=&quot;配置主机名&quot;&gt;&lt;/a&gt;配置主机名&lt;/h3&gt;&lt;p&gt;  hostname 显示当前主机名称；&lt;br&gt;  sudo hostname Server 把主机名改为Server；&lt;/p&gt;
&lt;h3 id=&quot;命令行编辑的几个辅助操作&quot;&gt;&lt;a href=&quot;#命令行编辑的几个辅助操作&quot; class=&quot;headerlink&quot; title=&quot;命令行编辑的几个辅助操作&quot;&gt;&lt;/a&gt;命令行编辑的几个辅助操作&lt;/h3&gt;&lt;p&gt;Tab键：自动补齐&lt;br&gt;反斜杠“\”：强制换行&lt;br&gt;快捷键 Ctrl+U：清空至行首&lt;br&gt;快捷键 Ctrl+K：清空至行尾&lt;br&gt;快捷键 Ctrl+L：清屏&lt;br&gt;快捷键 Ctrl+C：取消本次命令编辑&lt;br&gt;快捷键 Ctrl+ins 复制&lt;br&gt;快捷键 Shift+ins 粘贴&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://www.lookk.cn/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.lookk.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB Java</title>
    <link href="http://www.lookk.cn/2017/12/15/MongoDB-Java/"/>
    <id>http://www.lookk.cn/2017/12/15/MongoDB-Java/</id>
    <published>2017-12-15T06:08:00.000Z</published>
    <updated>2017-12-15T06:10:01.593Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1、环境配置"><a href="#1、环境配置" class="headerlink" title="1、环境配置"></a>1、环境配置</h4><p>在 Java 程序中如果要使用 MongoDB，你需要确保已经安装了 Java 环境及 MongoDB JDBC 驱动。</p><ul><li><p>你需要将 mongo-java-driver-3.2.2.jar （找到合适的版本）包含在你的 classpath 中。</p></li><li><p>国内 mongodb-driver jar<br>下载地址：<a href="http://central.maven.org/maven2/org/mongodb/mongo-java-driver/" target="_blank" rel="noopener">http://central.maven.org/maven2/org/mongodb/mongo-java-driver/</a></p></li></ul><a id="more"></a><h4 id="2、连接数据库测试"><a href="#2、连接数据库测试" class="headerlink" title="2、连接数据库测试"></a>2、连接数据库测试</h4><p>下载地址：<a href="https://gitee.com/jxyfengzhimuluo/mongodb" target="_blank" rel="noopener">https://gitee.com/jxyfengzhimuluo/mongodb</a><br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">package mogodb;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bson.Document;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mongodb.MongoClient;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.FindIterable;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.MongoCollection;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.MongoCursor;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.MongoDatabase;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.client.model.Filters;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MongodbJDBC</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="type">String</span>[] args) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接到mongodb服务</span></span><br><span class="line"><span class="type">MongoClient</span> mongoClient=new <span class="type">MongoClient</span>(); </span><br><span class="line"><span class="comment">//连接到数据库</span></span><br><span class="line"><span class="type">MongoDatabase</span> mongoDatabase=mongoClient.getDatabase(<span class="string">"jxy"</span>);</span><br><span class="line"><span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"mongodb is success to connect."</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//选择集合</span></span><br><span class="line"> <span class="type">MongoCollection</span>&lt;<span class="type">Document</span>&gt; collection = mongoDatabase.getCollection(<span class="string">"col"</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 插入文档</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">Document</span> document=new <span class="type">Document</span>(<span class="string">"title"</span>,<span class="string">"mongodb"</span>).</span><br><span class="line">append(<span class="string">"descrip"</span>, <span class="string">"join"</span>);</span><br><span class="line"><span class="type">List</span>&lt;<span class="type">Document</span>&gt; documents=new <span class="type">ArrayList</span>&lt;&gt;();</span><br><span class="line">documents.add(document);</span><br><span class="line">collection.insertMany(documents);</span><br><span class="line"><span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"文档插入成功"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 检索所有文档</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">FindIterable</span>&lt;<span class="type">Document</span>&gt; findIterable=collection.<span class="built_in">find</span>();</span><br><span class="line"><span class="type">MongoCursor</span>&lt;<span class="type">Document</span>&gt; mongoCursor=findIterable.iterator();</span><br><span class="line"><span class="keyword">while</span>(mongoCursor.hasNext()) &#123;</span><br><span class="line"><span class="type">System</span>.out.<span class="built_in">println</span>(mongoCursor.next());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 更新文档</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">collection.updateMany(<span class="type">Filters</span>.eq(<span class="string">"title"</span>, <span class="string">"Mongodb"</span>), new <span class="type">Document</span>(<span class="string">"$set"</span>,new <span class="type">Document</span>(<span class="string">"title"</span>,<span class="string">"MongoDB"</span>)));</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *删除第一个文档 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="comment">//删除符合条件的第一个文档  </span></span><br><span class="line">         <span class="comment">//collection.deleteOne(Filters.eq("descrip", "join"));  </span></span><br><span class="line">         <span class="comment">//删除所有符合条件的文档  </span></span><br><span class="line">         collection.deleteMany (<span class="type">Filters</span>.eq(<span class="string">"descrip"</span>, <span class="string">"join"</span>));  </span><br><span class="line">         </span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">catch</span> (<span class="type">Exception</span> e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1、环境配置&quot;&gt;&lt;a href=&quot;#1、环境配置&quot; class=&quot;headerlink&quot; title=&quot;1、环境配置&quot;&gt;&lt;/a&gt;1、环境配置&lt;/h4&gt;&lt;p&gt;在 Java 程序中如果要使用 MongoDB，你需要确保已经安装了 Java 环境及 MongoDB JDBC 驱动。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;你需要将 mongo-java-driver-3.2.2.jar （找到合适的版本）包含在你的 classpath 中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;国内 mongodb-driver jar&lt;br&gt;下载地址：&lt;a href=&quot;http://central.maven.org/maven2/org/mongodb/mongo-java-driver/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://central.maven.org/maven2/org/mongodb/mongo-java-driver/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="mongodb" scheme="http://www.lookk.cn/categories/mongodb/"/>
    
    
      <category term="mongodb" scheme="http://www.lookk.cn/tags/mongodb/"/>
    
  </entry>
  
  <entry>
    <title>Redis学习四（java使用redis）</title>
    <link href="http://www.lookk.cn/2017/12/10/Redis%E5%AD%A6%E4%B9%A0%E5%9B%9B%EF%BC%88java%E4%BD%BF%E7%94%A8redis%EF%BC%89/"/>
    <id>http://www.lookk.cn/2017/12/10/Redis学习四（java使用redis）/</id>
    <published>2017-12-10T07:13:59.000Z</published>
    <updated>2017-12-10T07:14:57.865Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>开始在 Java 中使用 Redis 前， 我们需要确保已经安装了 redis 服务及 Java redis 驱动，且你的机器上能正常使用 Java。其次，安装java redis驱动：</p><ul><li>首先需要下载驱动包 下载 <a href="https://mvnrepository.com/artifact/redis.clients/jedis" target="_blank" rel="noopener">jedis.jar</a>，确保下载最新驱动包。 </li><li>在 classpath 中包含该驱动包。</li></ul><a id="more"></a><h2 id="连接到redis服务器"><a href="#连接到redis服务器" class="headerlink" title="连接到redis服务器"></a>连接到redis服务器</h2><p><strong>实例</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import redis.clients.jedis.Jedis;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RedisJava</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//连接本地的 Redis 服务</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"127.0.0.0"</span>, <span class="number">6379</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"连接成功"</span>);</span><br><span class="line">        <span class="comment">//查看服务是否运行</span></span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"服务正在运行: "</span>+jedis.ping());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译以上 Java 程序，需确保驱动包的路径是正确的。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">连接成功</span><br><span class="line"><span class="section">服务正在运行: PONG</span></span><br></pre></td></tr></table></figure><h2 id="Redis-Java-String-字符串-实例"><a href="#Redis-Java-String-字符串-实例" class="headerlink" title="Redis Java String(字符串) 实例"></a>Redis Java String(字符串) 实例</h2><p><strong>实例</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import redis.clients.jedis.Jedis;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RedisStringJava</span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//连接本地的 Redis 服务</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"localhost"</span>);</span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"连接成功"</span>);</span><br><span class="line">        <span class="comment">//设置 redis 字符串数据</span></span><br><span class="line">        jedis.<span class="keyword">set</span>(<span class="string">"runoobkey"</span>, <span class="string">"www.runoob.com"</span>);</span><br><span class="line">        <span class="comment">// 获取存储的数据并输出</span></span><br><span class="line">        System.<span class="keyword">out</span>.println(<span class="string">"redis 存储的字符串为: "</span>+ jedis.<span class="keyword">get</span>(<span class="string">"runoobkey"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">连接成功</span><br><span class="line">redis 存储的字符串为: www<span class="selector-class">.runoob</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure><h2 id="Redis-Java-List-列表-实例"><a href="#Redis-Java-List-列表-实例" class="headerlink" title="Redis Java List(列表) 实例"></a>Redis Java List(列表) 实例</h2><p>实例</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisListJava</span> &#123;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//连接本地的 Redis 服务</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"localhost"</span>);</span><br><span class="line">        System.out.println(<span class="string">"连接成功"</span>);</span><br><span class="line">        <span class="comment">//存储数据到列表中</span></span><br><span class="line">        jedis.lpush(<span class="string">"site-list"</span>, <span class="string">"Runoob"</span>);</span><br><span class="line">        jedis.lpush(<span class="string">"site-list"</span>, <span class="string">"Google"</span>);</span><br><span class="line">        jedis.lpush(<span class="string">"site-list"</span>, <span class="string">"Taobao"</span>);</span><br><span class="line">        <span class="comment">// 获取存储的数据并输出</span></span><br><span class="line">        List&lt;String&gt; <span class="built_in">list</span> = jedis.lrange(<span class="string">"site-list"</span>, <span class="number">0</span> ,<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">list</span>.size(); i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">"列表项为: "</span>+<span class="built_in">list</span>.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">连接成功</span><br><span class="line"><span class="section">列表项为: Taobao</span></span><br><span class="line"><span class="section">列表项为: Google</span></span><br><span class="line"><span class="section">列表项为: Runoob</span></span><br></pre></td></tr></table></figure><h2 id="Redis-Java-Keys-实例"><a href="#Redis-Java-Keys-实例" class="headerlink" title="Redis Java Keys 实例"></a>Redis Java Keys 实例</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.<span class="built_in">Iterator</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="built_in">Set</span>;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"> </span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">RedisKeyJava</span> </span>&#123;</span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line">        <span class="comment">//连接本地的 Redis 服务</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"localhost"</span>);</span><br><span class="line">        System.out.println(<span class="string">"连接成功"</span>);</span><br><span class="line"> </span><br><span class="line">        <span class="comment">// 获取数据并输出</span></span><br><span class="line">        <span class="built_in">Set</span>&lt;<span class="built_in">String</span>&gt; keys = jedis.keys(<span class="string">"*"</span>); </span><br><span class="line">        <span class="built_in">Iterator</span>&lt;<span class="built_in">String</span>&gt; it=keys.iterator() ;   </span><br><span class="line">        <span class="keyword">while</span>(it.hasNext())&#123;   </span><br><span class="line">            <span class="built_in">String</span> key = it.next();   </span><br><span class="line">            System.out.println(key);   </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">连接成功</span><br><span class="line">runoobkey</span><br><span class="line">site-<span class="built_in">list</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;开始在 Java 中使用 Redis 前， 我们需要确保已经安装了 redis 服务及 Java redis 驱动，且你的机器上能正常使用 Java。其次，安装java redis驱动：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先需要下载驱动包 下载 &lt;a href=&quot;https://mvnrepository.com/artifact/redis.clients/jedis&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;jedis.jar&lt;/a&gt;，确保下载最新驱动包。 &lt;/li&gt;
&lt;li&gt;在 classpath 中包含该驱动包。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="redis" scheme="http://www.lookk.cn/categories/redis/"/>
    
    
      <category term="redis" scheme="http://www.lookk.cn/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis学习二（命令）</title>
    <link href="http://www.lookk.cn/2017/12/10/Redis%E5%AD%A6%E4%B9%A0%E4%BA%8C%EF%BC%88%E5%91%BD%E4%BB%A4%EF%BC%89/"/>
    <id>http://www.lookk.cn/2017/12/10/Redis学习二（命令）/</id>
    <published>2017-12-10T07:12:20.000Z</published>
    <updated>2017-12-10T07:13:35.715Z</updated>
    
    <content type="html"><![CDATA[<p>启动 redis 客户端，打开终端并输入命令 redis-cli。该命令会连接本地的 redis 服务。</p><blockquote><p> edis-cli</p></blockquote><p>在远程服务上执行命令:连接到主机为 127.0.0.1，端口为 6379 ，密码为 mypass 的 redis 服务上。</p><blockquote><p>redis-cli -h 127.0.0.1 -p 6379 -a “mypass” </p></blockquote><p>我们可以通过以下命令查看是否设置了密码验证： </p><blockquote><p>127.0.0.1:6379&gt; CONFIG get requirepass<br>1) “requirepass”<br>2) “” </p></blockquote><a id="more"></a><p>默认情况下 requirepass 参数是空的，这就意味着你无需通过密码验证就可以连接到 redis 服务。<br>你可以通过以下命令来修改该参数：</p><blockquote><p>127.0.0.1:6379&gt; CONFIG set requirepass “root”<br>OK<br>127.0.0.1:6379&gt; auth “root”  //认证密码<br>OK<br>127.0.0.1:6379&gt; CONFIG get requirepass<br> 1) “requirepass”<br> 2) “root”</p></blockquote><h2 id="keys-命令"><a href="#keys-命令" class="headerlink" title="keys 命令"></a>keys 命令</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">DEL <span class="built_in">key</span>   该命令用于在 <span class="built_in">key</span> 存在时删除 <span class="built_in">key</span>。</span><br><span class="line"></span><br><span class="line">EXISTS <span class="built_in">key</span>   `检查给定 <span class="built_in">key</span> 是否存在。`</span><br><span class="line"></span><br><span class="line">EXPIRE <span class="built_in">key</span> seconds    为给定 <span class="built_in">key</span> 设置过期时间。</span><br><span class="line"></span><br><span class="line">PEXPIRE <span class="built_in">key</span> milliseconds   设置 <span class="built_in">key</span> 的过期时间以毫秒计。</span><br><span class="line"> </span><br><span class="line">KEYS pattern  查找所有符合给定模式( pattern)的 <span class="built_in">key</span> 。</span><br><span class="line"></span><br><span class="line">MOVE <span class="built_in">key</span> db 将当前数据库的 <span class="built_in">key</span> 移动到给定的数据库 db 当中。</span><br><span class="line"></span><br><span class="line">PERSIST <span class="built_in">key</span>  移除 <span class="built_in">key</span> 的过期时间，<span class="built_in">key</span> 将持久保持。</span><br><span class="line"></span><br><span class="line">PTTL <span class="built_in">key</span>  以毫秒为单位返回 <span class="built_in">key</span> 的剩余的过期时间。</span><br><span class="line"></span><br><span class="line">TTL <span class="built_in">key</span>   以秒为单位，返回给定 <span class="built_in">key</span> 的剩余生存时间(TTL, <span class="built_in">time</span> to live)。</span><br><span class="line"></span><br><span class="line">RANDOMKEY  从当前数据库中随机返回一个 <span class="built_in">key</span> 。</span><br><span class="line"></span><br><span class="line">RENAME <span class="built_in">key</span> newkey  修改 <span class="built_in">key</span> 的名称</span><br><span class="line"></span><br><span class="line">RENAMENX <span class="built_in">key</span> newkey   仅当 newkey 不存在时，将 <span class="built_in">key</span> 改名为 newkey 。</span><br><span class="line"></span><br><span class="line"><span class="built_in">TYPE</span> <span class="built_in">key</span>   返回 <span class="built_in">key</span> 所储存的值的类型。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;启动 redis 客户端，打开终端并输入命令 redis-cli。该命令会连接本地的 redis 服务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; edis-cli&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在远程服务上执行命令:连接到主机为 127.0.0.1，端口为 6379 ，密码为 mypass 的 redis 服务上。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;redis-cli -h 127.0.0.1 -p 6379 -a “mypass” &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们可以通过以下命令查看是否设置了密码验证： &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;127.0.0.1:6379&amp;gt; CONFIG get requirepass&lt;br&gt;1) “requirepass”&lt;br&gt;2) “” &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="redis" scheme="http://www.lookk.cn/categories/redis/"/>
    
    
      <category term="redis" scheme="http://www.lookk.cn/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis学习三（数据类型）</title>
    <link href="http://www.lookk.cn/2017/12/10/Redis%E5%AD%A6%E4%B9%A0%E4%B8%89%EF%BC%88%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%89/"/>
    <id>http://www.lookk.cn/2017/12/10/Redis学习三（数据类型）/</id>
    <published>2017-12-10T07:11:02.000Z</published>
    <updated>2017-12-10T07:13:36.121Z</updated>
    
    <content type="html"><![CDATA[<p>Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。</p><h2 id="String（字符串）"><a href="#String（字符串）" class="headerlink" title="String（字符串）"></a>String（字符串）</h2><blockquote><p>string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。</p><p>string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象 。</p><p>string类型是Redis最基本的数据类型，一个键最大能存储512MB。</p></blockquote><p><strong>实例</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">set</span> <span class="selector-tag">name</span> "<span class="selector-tag">runoob</span>"</span><br><span class="line"><span class="selector-tag">OK</span></span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">get</span> <span class="selector-tag">name</span></span><br><span class="line">"<span class="selector-tag">runoob</span>"</span><br></pre></td></tr></table></figure></p><p>在以上实例中我们使用了 Redis 的 SET 和 GET 命令。键为 name，对应的值为 runoob。</p><a id="more"></a><h2 id="Hash（哈希）"><a href="#Hash（哈希）" class="headerlink" title="Hash（哈希）"></a>Hash（哈希）</h2><blockquote><p>Redis hash 是一个键名对集合。<br> Redis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象。</p></blockquote><p><strong>实例</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">hmset</span> <span class="selector-tag">user</span><span class="selector-pseudo">:1</span> <span class="selector-tag">username</span> <span class="selector-tag">password</span> 200</span><br><span class="line"><span class="selector-tag">OK</span></span><br><span class="line">127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">hgetall</span> <span class="selector-tag">user</span><span class="selector-pseudo">:1</span></span><br><span class="line">1) "<span class="selector-tag">username</span>"</span><br><span class="line">2) "<span class="selector-tag">password</span>"</span><br><span class="line">3) "200"</span><br></pre></td></tr></table></figure><p>以上实例中 hash 数据类型存储了包含用户脚本信息的用户对象。 实例中我们使用了 Redis HMSET, HGETALL 命令，user:1 为键值。每个 hash 可以存储 2^32 -1 键值对（40多亿）。</p><h2 id="List（列表）"><a href="#List（列表）" class="headerlink" title="List（列表）"></a>List（列表）</h2><blockquote><p>Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。</p></blockquote><p><strong>实例</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">lpush</span> <span class="selector-tag">runoob</span> <span class="selector-tag">redis</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 1</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">lpush</span> <span class="selector-tag">runoob</span> <span class="selector-tag">mongodb</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 2</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">lpush</span> <span class="selector-tag">runoob</span> <span class="selector-tag">rabitmq</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 3</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">lrange</span> <span class="selector-tag">runoob</span> 0 10</span><br><span class="line">1) "<span class="selector-tag">rabitmq</span>"</span><br><span class="line">2) "<span class="selector-tag">mongodb</span>"</span><br><span class="line">3) "<span class="selector-tag">redis</span>"</span><br></pre></td></tr></table></figure><p>列表最多可存储 2^32 - 1 元素 (4294967295, 每个列表可存储40多亿)。</p><h2 id="Set（集合）"><a href="#Set（集合）" class="headerlink" title="Set（集合）"></a>Set（集合）</h2><p>Redis的Set是string类型的无序集合。<br>集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。</p><p><strong>sadd 命令</strong></p><p>添加一个string元素,key对应的set集合中，成功返回1,如果元素已经在集合中返回0,key对应的set不存在返回错误。</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sadd <span class="built_in">key</span> <span class="built_in">member</span></span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">sadd</span> <span class="selector-tag">runoob</span> <span class="selector-tag">redis</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 1</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">sadd</span> <span class="selector-tag">runoob</span> <span class="selector-tag">mongodb</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 1</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">sadd</span> <span class="selector-tag">runoob</span> <span class="selector-tag">rabitmq</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 1</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">sadd</span> <span class="selector-tag">runoob</span> <span class="selector-tag">rabitmq</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 0</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">smembers</span> <span class="selector-tag">runoob</span></span><br><span class="line"></span><br><span class="line">1) "<span class="selector-tag">rabitmq</span>"</span><br><span class="line">2) "<span class="selector-tag">mongodb</span>"</span><br><span class="line">3) "<span class="selector-tag">redis</span>"</span><br></pre></td></tr></table></figure><p>注意：以上实例中 rabitmq 添加了两次，但根据集合内元素的唯一性，第二次插入的元素将被忽略。集合中最大的成员数为 2^32 - 1(4294967295, 每个集合可存储40多亿个成员)。</p><h2 id="zset-sorted-set：有序集合"><a href="#zset-sorted-set：有序集合" class="headerlink" title="zset(sorted set：有序集合)"></a>zset(sorted set：有序集合)</h2><p>Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。<br>不同的是每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。<br>zset的成员是唯一的,但分数(score)却可以重复。</p><p><strong>zadd 命令</strong></p><p>添加元素到集合，元素在集合中存在则更新对应score</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zadd <span class="built_in">key</span> score <span class="built_in">member</span></span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">zadd</span> <span class="selector-tag">runoob</span> 0 <span class="selector-tag">redis</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 1</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">zadd</span> <span class="selector-tag">runoob</span> 0 <span class="selector-tag">mongodb</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 1</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">zadd</span> <span class="selector-tag">runoob</span> 0 <span class="selector-tag">rabitmq</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 1</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">zadd</span> <span class="selector-tag">runoob</span> 0 <span class="selector-tag">rabitmq</span></span><br><span class="line">(<span class="selector-tag">integer</span>) 0</span><br><span class="line"><span class="selector-tag">redis</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:6379</span>&gt; <span class="selector-tag">ZRANGEBYSCORE</span> <span class="selector-tag">runoob</span> 0 1000</span><br><span class="line"></span><br><span class="line">1) "<span class="selector-tag">redis</span>"</span><br><span class="line">2) "<span class="selector-tag">mongodb</span>"</span><br><span class="line">3) "<span class="selector-tag">rabitmq</span>"</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis支持五种数据类型：string（字符串），hash（哈希），list（列表），set（集合）及zset(sorted set：有序集合)。&lt;/p&gt;
&lt;h2 id=&quot;String（字符串）&quot;&gt;&lt;a href=&quot;#String（字符串）&quot; class=&quot;headerlink&quot; title=&quot;String（字符串）&quot;&gt;&lt;/a&gt;String（字符串）&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。&lt;/p&gt;
&lt;p&gt;string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象 。&lt;/p&gt;
&lt;p&gt;string类型是Redis最基本的数据类型，一个键最大能存储512MB。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;实例&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;redis&lt;/span&gt; 127&lt;span class=&quot;selector-class&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:6379&lt;/span&gt;&amp;gt; &lt;span class=&quot;selector-tag&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;name&lt;/span&gt; &quot;&lt;span class=&quot;selector-tag&quot;&gt;runoob&lt;/span&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;OK&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;redis&lt;/span&gt; 127&lt;span class=&quot;selector-class&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:6379&lt;/span&gt;&amp;gt; &lt;span class=&quot;selector-tag&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&quot;&lt;span class=&quot;selector-tag&quot;&gt;runoob&lt;/span&gt;&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在以上实例中我们使用了 Redis 的 SET 和 GET 命令。键为 name，对应的值为 runoob。&lt;/p&gt;
    
    </summary>
    
      <category term="redis" scheme="http://www.lookk.cn/categories/redis/"/>
    
    
      <category term="redis" scheme="http://www.lookk.cn/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Redis学习一（简介与安装）</title>
    <link href="http://www.lookk.cn/2017/12/10/Redis%E5%AD%A6%E4%B9%A0%E4%B8%80%EF%BC%88%E7%AE%80%E4%BB%8B%E4%B8%8E%E5%AE%89%E8%A3%85%EF%BC%89/"/>
    <id>http://www.lookk.cn/2017/12/10/Redis学习一（简介与安装）/</id>
    <published>2017-12-10T07:08:59.000Z</published>
    <updated>2017-12-10T07:10:35.354Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis-简介"><a href="#Redis-简介" class="headerlink" title="Redis 简介"></a>Redis 简介</h2><p>Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。<br>Redis 与其他 key - value 缓存产品有以下三个特点：</p><blockquote><ul><li><p>Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。</p></li><li><p>Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。</p></li><li><p>Redis支持数据的备份，即master-slave模式的数据备份。</p></li></ul></blockquote><a id="more"></a><p><strong>Redis 优势</strong></p><blockquote><ul><li><p>性能极高 – Redis能读的速度是110000次/s,写的速度是81000次/s 。</p></li><li><p>丰富的数据类型 – Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。</p></li><li><p>原子 – Redis的所有操作都是原子性的，同时Redis还支持对几个操作全并后的原子性执行。</p></li><li><p>丰富的特性 – Redis还支持 publish/subscribe, 通知, key 过期等等特性。</p></li></ul></blockquote><p><strong>Redis与其他key-value存储有什么不同？</strong></p><blockquote><ul><li>Redis有着更为复杂的数据结构并且提供对他们的原子性操作，这是一个不同于其他数据库的进化路径。Redis的数据类型都是基于基本数据结构的同时对程序员透明，无需进行额外的抽象。</li><li>Redis运行在内存中但是可以持久化到磁盘，所以在对不同数据集进行高速读写时需要权衡内存，因为数据量不能大于硬件内存。在内存数据库方面的另一个优点是，相比在磁盘上相同的复杂的数据结构，在内存中操作起来非常简单，这样Redis可以做很多内部复杂性很强的事情。同时，在磁盘格式方面他们是紧凑的以追加的方式产生的，因为他们并不需要进行随机访问。</li></ul></blockquote><h2 id="redis安装"><a href="#redis安装" class="headerlink" title="redis安装"></a>redis安装</h2><p><strong>Window 下安装</strong></p><p>下载地址：<a href="https://github.com/MSOpenTech/redis/releases。" target="_blank" rel="noopener">https://github.com/MSOpenTech/redis/releases。</a></p><p>Redis 支持 32 位和 64 位。这个需要根据你系统平台的实际情况选择，这里我们下载 Redis-x64-xxx.zip压缩包到 C 盘，解压后，将文件夹重新命名为 redis。</p><p>打开一个 cmd 窗口 使用cd命令切换目录到 <code>C:\redis 运行 redis-server.exe redis.windows.conf</code></p><p>如果想方便的话，可以把 redis 的路径加到系统的环境变量里，这样就省得再输路径了，后面的那个 redis.windows.conf 可以省略，如果省略，会启用默认的。输入之后，会显示如下界面：</p><p><img src="http://img.blog.csdn.net/20170727164116265?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzIzMzcxMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>这时候另启一个cmd窗口，原来的不要关闭，不然就无法访问服务端了。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">切换到<span class="selector-tag">redis</span>目录下运行 <span class="selector-tag">redis-cli</span><span class="selector-class">.exe</span> <span class="selector-tag">-h</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span> <span class="selector-tag">-p</span> 6379 </span><br><span class="line">设置键值对 <span class="selector-tag">set</span> <span class="selector-tag">myKey</span> <span class="selector-tag">abc</span></span><br><span class="line">取出键值对 <span class="selector-tag">get</span> <span class="selector-tag">myKey</span></span><br></pre></td></tr></table></figure><p><img src="http://img.blog.csdn.net/20170727164144126?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzIzMzcxMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>说明我们已经成功安装了redis。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Redis-简介&quot;&gt;&lt;a href=&quot;#Redis-简介&quot; class=&quot;headerlink&quot; title=&quot;Redis 简介&quot;&gt;&lt;/a&gt;Redis 简介&lt;/h2&gt;&lt;p&gt;Redis 是完全开源免费的，遵守BSD协议，是一个高性能的key-value数据库。&lt;br&gt;Redis 与其他 key - value 缓存产品有以下三个特点：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Redis支持数据的备份，即master-slave模式的数据备份。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="redis" scheme="http://www.lookk.cn/categories/redis/"/>
    
    
      <category term="redis" scheme="http://www.lookk.cn/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>idea 常用快捷键</title>
    <link href="http://www.lookk.cn/2017/12/10/idea-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://www.lookk.cn/2017/12/10/idea-常用快捷键/</id>
    <published>2017-12-10T06:58:59.000Z</published>
    <updated>2017-12-10T07:00:09.515Z</updated>
    
    <content type="html"><![CDATA[<p>Ctrl +<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Ctrl</span> + J插入自定义动态代码模板 （必备）</span><br><span class="line"><span class="symbol">Ctrl</span> + P方法参数提示显示 （必备）</span><br><span class="line"><span class="symbol">Ctrl</span> + <span class="built_in">F1</span>在光标所在的错误代码处显示错误信息 （必备）</span><br><span class="line"><span class="symbol">Ctrl</span> + <span class="built_in">F3</span>调转到所选中的词的下一个引用位置 （必备）</span><br><span class="line"><span class="symbol">Ctrl</span> + <span class="built_in">F4</span>关闭当前编辑文件</span><br><span class="line"><span class="symbol">ctrl</span> + x删除一行/剪切</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>Ctrl + Alt +<br><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + Alt + L格式化代码，可以对当前文件和整个包目录使用 （必备）</span><br><span class="line">Ctrl + Alt + <span class="keyword">O</span>优化导入的类，可以对当前文件和整个包目录使用 （必备）</span><br><span class="line">Ctrl + Alt + <span class="keyword">I</span>光标所在行 或 选中部分进行自动代码缩进，有点类似格式化</span><br><span class="line">Ctrl + Alt + <span class="keyword">Space</span>类名自动完成</span><br><span class="line">Ctrl + Alt + F11切换全屏模式</span><br><span class="line">ctrl + alt + 点击鼠标，进入子类实现</span><br></pre></td></tr></table></figure></p><p>Ctrl + Shift +<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + <span class="built_in">Shift</span> + F根据输入内容查找整个项目 或 指定目录内文件 （必备）</span><br><span class="line">Ctrl + <span class="built_in">Shift</span> + R根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件 （必备）</span><br><span class="line">Ctrl + <span class="built_in">Shift</span> + J自动将下一行合并到当前行末尾 （必备）</span><br><span class="line">Ctrl + <span class="built_in">Shift</span> + I快速查看光标所在的方法 或 类的定义</span><br><span class="line">Ctrl + <span class="built_in">Shift</span> + /代码块注释 （必备）</span><br><span class="line">Ctrl + <span class="built_in">Shift</span> + +展开所有代码 （必备）</span><br><span class="line">Ctrl + <span class="built_in">Shift</span> + -折叠所有代码 （必备）</span><br><span class="line">Ctrl + <span class="built_in">Shift</span> + Space智能代码提示  改为ctrl+/</span><br><span class="line">Ctrl + <span class="built_in">Shift</span> + Enter自动结束代码，行末自动添加分号 （必备）</span><br><span class="line">ctrl + <span class="built_in">shift</span> + 向上/向下 　整行代码移动</span><br></pre></td></tr></table></figure></p><p>Alt +<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Alt + <span class="keyword">Insert</span>代码自动生成，如生成对象的 <span class="keyword">set</span> / get方法，构造函数，<span class="built_in">toString</span>() 等 （必备）</span><br><span class="line">alt + x 清除控制台</span><br></pre></td></tr></table></figure></p><p>Shift +<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Shift + F10等效于点击工具栏的 <span class="keyword">Run</span><span class="bash"> 按钮</span></span><br></pre></td></tr></table></figure></p><p>Alt + Shift +<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Alt + Shift + F10弹出 <span class="keyword">Run</span><span class="bash"> 的可选择菜单</span></span><br></pre></td></tr></table></figure></p><blockquote><p><strong>最特殊的快捷键 Alt + Enter </strong>    　　智能辅助</p></blockquote><p><strong>debugger</strong></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">alt</span> + 点击变量  查看变量值</span><br><span class="line"></span><br><span class="line">alt + F8  执行表达式</span><br><span class="line"></span><br><span class="line">F7 进入该方法</span><br><span class="line"></span><br><span class="line">F8 下一步</span><br><span class="line"></span><br><span class="line">F9 跑完</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ctrl +&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;Ctrl&lt;/span&gt; + J		插入自定义动态代码模板 （必备）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;Ctrl&lt;/span&gt; + P		方法参数提示显示 （必备）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;Ctrl&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;F1&lt;/span&gt;		在光标所在的错误代码处显示错误信息 （必备）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;Ctrl&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;F3&lt;/span&gt;		调转到所选中的词的下一个引用位置 （必备）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;Ctrl&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;F4&lt;/span&gt;		关闭当前编辑文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;ctrl&lt;/span&gt; + x		删除一行/剪切&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="idea" scheme="http://www.lookk.cn/categories/idea/"/>
    
    
      <category term="idea" scheme="http://www.lookk.cn/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA Ultimate 2017激活方法</title>
    <link href="http://www.lookk.cn/2017/12/10/IntelliJ-IDEA-Ultimate-2017%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/"/>
    <id>http://www.lookk.cn/2017/12/10/IntelliJ-IDEA-Ultimate-2017激活方法/</id>
    <published>2017-12-10T06:54:57.000Z</published>
    <updated>2017-12-10T06:58:39.023Z</updated>
    
    <content type="html"><![CDATA[<p><strong>以下两种方式均可：</strong></p><blockquote><p><strong>方法1</strong>.在网站<a href="http://idea.lanyus.com/中获取注册码，填入Activation" target="_blank" rel="noopener">http://idea.lanyus.com/中获取注册码，填入Activation</a> code中；</p></blockquote><hr><blockquote><p><strong>方法2</strong>.选择License server项，填入下面任一地址：</p><p><a href="http://intellij.mandroid.cn/" target="_blank" rel="noopener">http://intellij.mandroid.cn/</a></p><p><a href="http://idea.imsxm.com/" target="_blank" rel="noopener">http://idea.imsxm.com/</a></p><p><a href="http://idea.iteblog.com/key.php" target="_blank" rel="noopener">http://idea.iteblog.com/key.php</a><br>1<br>2<br>3<br>4<br>5<br>6<br>然后点击Activate即可。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;以下两种方式均可：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;方法1&lt;/strong&gt;.在网站&lt;a href=&quot;http://idea.lanyus.com/中获取注册码，填入Activation&quot; target=&quot;_blan
      
    
    </summary>
    
      <category term="idea" scheme="http://www.lookk.cn/categories/idea/"/>
    
    
      <category term="idea" scheme="http://www.lookk.cn/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>hexo 设置网站小图表</title>
    <link href="http://www.lookk.cn/2017/12/09/hexo-%E8%AE%BE%E7%BD%AE%E7%BD%91%E7%AB%99%E5%B0%8F%E5%9B%BE%E8%A1%A8/"/>
    <id>http://www.lookk.cn/2017/12/09/hexo-设置网站小图表/</id>
    <published>2017-12-09T09:24:56.000Z</published>
    <updated>2017-12-09T09:30:13.027Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.blog.csdn.net/20171209172004775?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzIzMzcxMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>如图，设置这样的网站小图片，有多种方法，我介绍一直简单的，到ico在线制作生成一个ico图片，命名为favicon.ico，放在hexo/source下上传，然后设置yilia下的_config.yml的favicon: favicon.ico，然后更新github就行了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171209172004775?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzIzMzcxMDk=/font/5a6L5L2T/fontsize
      
    
    </summary>
    
      <category term="hexo" scheme="http://www.lookk.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.lookk.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>heox 添加音乐</title>
    <link href="http://www.lookk.cn/2017/12/09/heox-%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%B5%8B%E8%AF%95/"/>
    <id>http://www.lookk.cn/2017/12/09/heox-添加音乐测试/</id>
    <published>2017-12-09T08:34:15.000Z</published>
    <updated>2017-12-09T14:18:49.017Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="500" height="86" src="//music.163.com/outchain/player?type=2&id=33035954&auto=1&height=66"></iframe><a id="more"></a><h3 id="1、生成网易云音乐外链播放器"><a href="#1、生成网易云音乐外链播放器" class="headerlink" title="1、生成网易云音乐外链播放器"></a>1、生成网易云音乐外链播放器</h3><p>登录网页版网易云音乐，打开一首歌，点击 ”生成外链播放器“</p><p><img src="http://img.blog.csdn.net/20171209220918225?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzIzMzcxMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>生产外链播放器代码，把代码粘贴到你想放的位置。</p><p><img src="http://img.blog.csdn.net/20171209220740063?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzIzMzcxMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述">  </p><h3 id="2、侧栏添加背景音乐"><a href="#2、侧栏添加背景音乐" class="headerlink" title="2、侧栏添加背景音乐"></a>2、侧栏添加背景音乐</h3><p>打开/hexo/themes/yilia/layout/_partial/left-col.ejs文件，把音乐HTML代码粘贴进去，可以添加样式，改变大小，这是我的代码：</p><pre><code>&lt;nav class=&quot;header-nav&quot;&gt;    &lt;div class=&quot;social&quot;&gt;        &lt;% for (var i in theme.subnav){ %&gt;            &lt;a class=&quot;&lt;%= i %&gt;&quot; target=&quot;_blank&quot; href=&quot;&lt;%- url_for(theme.subnav[i]) %&gt;&quot; title=&quot;&lt;%= i %&gt;&quot;&gt;&lt;i class=&quot;icon-&lt;%= i %&gt;&quot;&gt;&lt;/i&gt;&lt;/a&gt;        &lt;%}%&gt;    &lt;/div&gt;    &lt;!--音乐播放插件--&gt;    &lt;div style=&quot;margin-top:30px;&quot;&gt;        &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=240 height=52 src=&quot;//music.163.com/outchain/player?type=2&amp;id=33035954&amp;auto=1&amp;height=32&quot;&gt;&lt;/iframe&gt;    &lt;/div&gt;&lt;/nav&gt;</code></pre><h3 id="3、在文章中添加音乐"><a href="#3、在文章中添加音乐" class="headerlink" title="3、在文章中添加音乐"></a>3、在文章中添加音乐</h3><p>配置hexo下的_config.yml的<code>post_asset_folder: true</code> 设置为true。</p><p>把音乐插件代码直接添加到文章中你想添加的位置就ok了。</p>]]></content>
    
    <summary type="html">
    
      &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;500&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;id=33035954&amp;auto=1&amp;height=66&quot;&gt;&lt;/iframe&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.lookk.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.lookk.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo yilia 主题使用畅言评论系统</title>
    <link href="http://www.lookk.cn/2017/12/09/Hexo-yilia-%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E7%95%85%E8%A8%80%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    <id>http://www.lookk.cn/2017/12/09/Hexo-yilia-主题使用畅言评论系统/</id>
    <published>2017-12-09T08:31:10.000Z</published>
    <updated>2017-12-09T08:32:07.757Z</updated>
    
    <content type="html"><![CDATA[<p>前言：你的有一个可以正常使用的域名，可以参考我的<a href="http://www.lookk.cn/2017/12/09/hexo-%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D/">hexo 绑定自己的域名</a></p><h3 id="注册畅言"><a href="#注册畅言" class="headerlink" title="注册畅言"></a>注册畅言</h3><p>进入<a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">畅言官网</a> 免费注册</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>注册完后，登录进入畅言官网，获取你的畅言 app id 和 app key。<br>把你的ip和key添加到hexo下的_config.yml的畅言配置里就行了，yilia主题把一切都封装好了，直接使用就行。<br>只要在发布篇文章添加上可评论：<code>comments: true</code> #就行了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前言：你的有一个可以正常使用的域名，可以参考我的&lt;a href=&quot;http://www.lookk.cn/2017/12/09/hexo-%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D/&quot;&gt;he
      
    
    </summary>
    
      <category term="hexo" scheme="http://www.lookk.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.lookk.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo 绑定自己的域名</title>
    <link href="http://www.lookk.cn/2017/12/09/hexo-%E7%BB%91%E5%AE%9A%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9F%9F%E5%90%8D/"/>
    <id>http://www.lookk.cn/2017/12/09/hexo-绑定自己的域名/</id>
    <published>2017-12-09T08:14:55.000Z</published>
    <updated>2017-12-09T08:19:54.379Z</updated>
    
    <content type="html"><![CDATA[<p>前提，你得有一个域名，有些域名需要备案后才能用。</p><h3 id="在域名解析添加记录"><a href="#在域名解析添加记录" class="headerlink" title="在域名解析添加记录"></a>在域名解析添加记录</h3><p>如果你用你顶点域名（如：lookk.cn)，就添加一条主机记录为@的，如果你用www子域名（如：www.look.cn）,github绑定自己的域名只支持这两种，不支持其他子域名，你可以去github的help查看</p><p><img src="http://img.blog.csdn.net/20171209155658980?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzIzMzcxMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><ul><li>记录类型一定要为 CNAME 这种类型，只有这样你的域名才能指向你的github </li><li>记录值填 yourname.github.io </li></ul><a id="more"></a><h3 id="在github添加自定义域名"><a href="#在github添加自定义域名" class="headerlink" title="在github添加自定义域名"></a>在github添加自定义域名</h3><p><img src="http://img.blog.csdn.net/20171209160451717?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzIzMzcxMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"> </p><h3 id="配置hexo的-config-yml"><a href="#配置hexo的-config-yml" class="headerlink" title="配置hexo的_config.yml"></a>配置hexo的_config.yml</h3><p>找到url设置，添加你的域名<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># URL 链接设置</span><br><span class="line">## If your site <span class="keyword">is</span> <span class="keyword">put</span> in <span class="keyword">a</span> subdirectory, <span class="keyword">set</span> url <span class="keyword">as</span> <span class="string">'http://yoursite.com/child'</span> <span class="built_in">and</span> root <span class="keyword">as</span> <span class="string">'/child/'</span></span><br><span class="line">ur<span class="variable">l:</span> http://www.lookk.<span class="keyword">cn</span></span><br><span class="line">roo<span class="variable">t:</span> /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_default<span class="variable">s:</span></span><br></pre></td></tr></table></figure></p><h3 id="上传CNAME文件"><a href="#上传CNAME文件" class="headerlink" title="上传CNAME文件"></a>上传CNAME文件</h3><p>光执行上面三个步骤还是不够，每次你上传更新时，你在github设置的域名可能会丢失，所以要上传一个CNAME文件，让github记住你添加的域名：<br>先创建一个名为CNAME的文件，没有后缀，再在文件中写上你的域名（如：www.lookk.cn）,然后把这个文件放在/hexo/source目录下，上传就行了。</p><p>摘自：<a href="http://www.flyfood.name/2017/07/23/%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B93/" target="_blank" rel="noopener">http://www.flyfood.name/2017/07/23/%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%AB%99%E7%82%B93/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前提，你得有一个域名，有些域名需要备案后才能用。&lt;/p&gt;
&lt;h3 id=&quot;在域名解析添加记录&quot;&gt;&lt;a href=&quot;#在域名解析添加记录&quot; class=&quot;headerlink&quot; title=&quot;在域名解析添加记录&quot;&gt;&lt;/a&gt;在域名解析添加记录&lt;/h3&gt;&lt;p&gt;如果你用你顶点域名（如：lookk.cn)，就添加一条主机记录为@的，如果你用www子域名（如：www.look.cn）,github绑定自己的域名只支持这两种，不支持其他子域名，你可以去github的help查看&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171209155658980?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzIzMzcxMDk=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记录类型一定要为 CNAME 这种类型，只有这样你的域名才能指向你的github &lt;/li&gt;
&lt;li&gt;记录值填 yourname.github.io &lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.lookk.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.lookk.cn/tags/hexo/"/>
    
  </entry>
  
</feed>
